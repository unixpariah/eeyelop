#ifndef TEXT_SHADER_H
#define TEXT_SHADER_H

const char *text_vertex_source =
    "#version 460 core\n"
    "\n"
    "layout(location = 0) in vec2 in_pos;\n"
    "\n"
    "layout(std140) uniform UniformBlock {\n"
    "  mat4 projection;\n"
    "  vec4 startColor[2];\n"
    "  vec4 endColor[2];\n"
    "  float degrees[2];\n"
    "};\n"
    "uniform mat4 transform[400];\n"
    "\n"
    "out VS_OUT {\n"
    "  vec2 pos;\n"
    "  vec2 texCoords;\n"
    "  flat int index;\n"
    "  vec4 startColor[2];\n"
    "  vec4 endColor[2];\n"
    "  float degrees[2];\n"
    "} vs_out;\n"
    "\n"
    "void main() {\n"
    "  vec4 position =\n"
    "      projection * transform[gl_InstanceID] * vec4(in_pos, 0.0, 1.0);\n"
    "  gl_Position = position;\n"
    "\n"
    "  vs_out.pos = position.xy;\n"
    "  vs_out.texCoords = in_pos;\n"
    "  vs_out.index = gl_InstanceID;\n"
    "  vs_out.startColor = startColor;\n"
    "  vs_out.endColor = endColor;\n"
    "  vs_out.degrees = degrees;\n"
    "}\n";

const char *text_fragment_source =
    "#version 460 core\n"
    "layout(location = 0) out vec4 FragColor;\n"
    "\n"
    "uniform sampler2DArray text;\n"
    "uniform int letterMap[400];\n"
    "uniform int colorIndex[400];\n"
    "\n"
    "in VS_OUT {\n"
    "  vec2 pos;\n"
    "  vec2 texCoords;\n"
    "  flat int index;\n"
    "  vec4 startColor[2];\n"
    "  vec4 endColor[2];\n"
    "  float degrees[2];\n"
    "} fs_in;\n"
    "\n"
    "void main() {\n"
    "  vec2 uv = fs_in.pos - 0.5;\n"
    "\n"
    "  float angle = radians(fs_in.degrees[colorIndex[fs_in.index]]);\n"
    "  vec2 rotatedUV = vec2(cos(angle) * uv.x - sin(angle) * uv.y,\n"
    "                        sin(angle) * uv.x + cos(angle) * uv.y) + 0.5;\n"
    "\n"
    "  float gradientFactor = smoothstep(0.0, 1.0, rotatedUV.x);\n"
    "  vec4 color = mix(fs_in.startColor[colorIndex[fs_in.index]],\n"
    "                   fs_in.endColor[colorIndex[fs_in.index]], "
    "gradientFactor);\n"
    "\n"
    "  FragColor =\n"
    "      color * texture(text, vec3(fs_in.texCoords.xy, "
    "letterMap[fs_in.index])).r;\n"
    "}\n";

#endif // TEXT_SHADER_H
